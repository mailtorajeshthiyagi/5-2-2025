name: deployment
on: 
    push:
     branches:
         - master
    workflow_dispatch:
env: 
     Welcome: "Welcome to git Traning!!!!!!!!!"    
jobs:
    testing:
        runs-on: windows-latest  
        outputs:
            cache-hit: ${{steps.savecache.outputs.cache-hit}}
        steps:
          - name: testing Envname
            run: write-host $env:Welcome
          - name: check out repo
            uses: actions/checkout@v4
          - name : check cache folder1
            run:  npm config get cache
          - name: set npm cache folder
            run: 
                if(!(test-path "${{ runner.temp }}\npm-cache"))
                {
                new-item "${{ runner.temp }}\npm-cache" -itemtype directory -force
                 } 
                 else
                 {
                npm config set cache ${{ runner.temp }}\npm-cache --global
                 }
          - name : configure npm cache
            uses: actions/cache@v4
            id: savecache
            with:                            
                path: ${{ runner.temp }}\npm-cache
                key: npm-cache-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
                restore-keys: |
                    npm-cache-${{ runner.os }}-
          - name : Print npm Cache Path
            run: npm config get cache

          - name : initiate install
            run:  |               
               npm install          

    deploy:
      needs: testing  # Ensure deploy waits for testing to complete
      runs-on: windows-latest
      steps:
         - name : check repo
           uses: actions/checkout@v4
         - name: set cache path 
           run : npm config set cache ${{ runner.temp }}\npm-cache --global
         - name : configure npm cache
           uses: actions/cache@v4
           id: savecache
           with:                            
               path: ${{ runner.temp }}\npm-cache
               key: npm-cache-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
               restore-keys: |
                   npm-cache-${{ runner.os }}-
         - name : Print npm Cache Path
           run: npm config get cache  
         - name: Check Cache Hit in Deploy
           run: | 
              write-host "Cache hit status: ${{ needs.testing.outputs.cache-hit }}"

